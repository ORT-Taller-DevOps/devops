apiVersion: apps/v1
kind: Deployment
metadata:
  name: "payments-service-example"
  labels:
    app: "payments-service-example"
    env: "prod"
spec:
  strategy:
    type: Recreate
  replicas: 2
  selector:
    matchLabels:
      app: "payments-`service-example"
      env: "prod"
  template:
    metadata:
      labels:
        app: "payments-service-example"
        env: "prod"
    spec:
      nodeSelector:
        env: "prod"
      containers:
        - name: "payments-service-example"
          image: "894577096821.dkr.ecr.us-east-1.amazonaws.com/payments-service-example:latest-prod"
          imagePullPolicy: Always
          ports:
              - containerPort: 8080
                hostPort: 8080
          resources:
            requests:
              memory: 256Mi
              cpu: "0.5"
            limits:
              memory: 512Mi
              cpu: "1"
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          startupProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: "payments-service-example"
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: /health
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "8080"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: http
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "60"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "120"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: "10"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold: "2"
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  selector:
    app: "payments-service-example"
    env: "prod"
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
